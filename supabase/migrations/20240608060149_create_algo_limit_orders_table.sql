create table algo_limit_orders
(
    id                            bigint generated by default as identity primary key,
    network                       text    not null default 'mainnet':: text,
    wallet_address                text    not null,
    order_type                    text    not null,
    asset_in                      integer not null,
    asset_out                     integer not null,
    amount_in                     text    not null,
    at_price                      text    not null,
    slippage                      real    not null default '0.1':: real,
    is_active                     boolean not null default true,
    generate_reverse_trade        boolean not null default false,
    is_completed                  boolean not null default false,
    completed_on                  timestamp with time zone null,
    trx_id                        text    null,
    first_asset_in_linked_trades  integer null,
    amount_received               text    null,
    dex_used                      text    null,
    reverse_trade_at_price        text    null,
    always_use_starting_amount_in boolean not null default true,
    origin_trade                  bigint  null,
    created_at                    timestamp with time zone default timezone('utc':: text, now()) not null,
    updated_at                    timestamp with time zone default timezone('utc':: text, now()) not null,
    constraint algo_limit_orders_asset_in_fkey foreign key (asset_in) references algo_assets (id) on delete cascade,
    constraint algo_limit_orders_asset_out_fkey foreign key (asset_out) references algo_assets (id) on delete cascade
);

alter table "public"."algo_limit_orders" enable row level security;

create
policy "Enable read access for all users"
on "public"."algo_limit_orders"
as permissive
for
select
    to public
    using (true);